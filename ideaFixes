#!/usr/bin/env bash

# This variable reflects the version of Intellij you have on your computer
# Note: Minor release is ignored i.e. IntelliJIdea2018.2 is used, not IntelliJIdea2018.2.1
IDEA_VERSION='IntelliJIdea2018.2'

# Possible Parameters to run script:
# 1) ./ideaFixes.sh 1 -- only used the first time after the ELIS project is cloned
# 2) ./ideaFixes.sh 2 -- used to skip the building the Interfaces, mostly for testing this script
# 3) ./ideaFixes.sh -- this one needs to be run every time dependencies in ELIS get updated,
                     # I use it every time I pull Master after clicking the Gradle refresh wheel in Intellij

initialSetUp(){
    # Copy FeeCalculationRules.drl and Add unimplemented methods to ValidatorServiceImplTest.java
    # These changes are required for Intellij to build and deploy correctly
    # DO NOT Commit any of these changes to GIT

    RED='\033[01;31m'
    NONE='\033[00m'
    NEW_FEE_RULES_PATH='../EIP/LockboxIntegration/src/main/resources/FeeCalculationRules.drl'

    echo -e "${RED}IMPORTANT: This process alters two files FeeCalculationRules.drl and ValidatorServiceImplTest.java. DO NOT commit these two changes${NONE}"
    echo 'Do you agree to not commit these changed files? (Enter y or n)'
    read input
    if [[ ${input} == 'y' || ${input} == 'Y' ]];
    then
        if [ ! -f ${NEW_FEE_RULES_PATH} ]; then
            echo 'Copying FeeCalculationRules.drl'
            cp ../Shared/RulesLib/src/main/rules/fees/FeeCalculationRules.drl ${NEW_FEE_RULES_PATH}
        else
            echo 'File Already Exist. Skipping Copy'
        fi
    else
        echo 'Cancelling the Initial Set Up'
    fi
}

markDirectoriesCorrectly(){
    # This Uses the files from idea_working/modules to correctly mark the directories for Intellij
    # Specifically this correctly marks the Test directories

    IDEA_DIR=.idea/modules
    cd ../${IDEA_DIR}
    RESULTS="$(find . -iregex '.*\(iml\)')"
    FILES=($RESULTS)
    if [ -n "${FILES}" ];
    then
        echo 'Begin Directory Deletion'
        for i in `seq 0 ${#FILES[@] - 1}`;
        do
            if [ "${FILES[i]}" == './Shared/Interfaces/Interfaces.iml' ];
            then
                continue
            fi
            echo ${FILES[i]}
            sed -i '' '/<content/,/<\/content>/{//!d;};' ${FILES[i]}
        done
        echo 'Directory Deletion Complete'
        cd ../../idea_working/modules
        echo 'Begin Directory Configuration'
        for i in `seq 0 ${#FILES[@] - 1}`;
        do
            if [ $(ls "${FILES[i]}") ];
            then
                if [ "${FILES[i]}" == './Shared/Interfaces/Interfaces.iml' ];
                then
                    continue
                fi
                CONTENT=$(cat ${FILES[i]})
                echo ${FILES[i]}
                sed -i '' -e "/<content url=/a\\
                ${CONTENT}" ../../${IDEA_DIR}/${FILES[i]:2}
                if [ "${FILES[i]}" == './Backend/Elis2Services/Elis2Services.iml' ];
                then
                    sed -i '' -e "/<orderEntry type=\"library\" name=\"Gradle: javax.validation:validation-api:1.1.0.Final\" level=\"project\" \/>/d" ../../${IDEA_DIR}/${FILES[i]:2}
                fi

            fi
        done
        echo 'Directory Configuration Complete'
    fi
}

gradleRefreshAll(){
    # This method is not currently used
    # May one day work to resolve issues with initial Intellij Import

    cd $USER_DIR/elis/apps
    if ! grep -q "//apply plugin: 'crypto'" build.gradle;
    then
        echo 'Commenting out Crypto'
        sed -i '' -e "s|apply plugin: 'crypto'.*|//apply plugin: 'crypto'|" build.gradle
    fi
    echo 'Refresh gradle dependencies'
    gradle clean :Shared:Interfaces:compileGeneratedJava --refresh-dependencies
    echo 'Removing comments'
    sed -i '' -e "s|//apply plugin: 'crypto'.*|apply plugin: 'crypto'|" build.gradle
}

if [ $1 ];
then
    echo "Running $1"
else
    echo 'Running Initial Project Set Up'
fi

case $1 in
    1)
        initialSetUp
        ;;
    2)
        markDirectoriesCorrectly
        ;;
    *)
        markDirectoriesCorrectly
        cd $USER_DIR/elis/apps
        echo 'Running gradle clean'
        gradle clean :Shared:Interfaces:compileGeneratedJava
        echo 'Initial set up is now complete'
        ;;
esac
